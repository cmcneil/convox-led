// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/example/android/networkconnect/convox_led.proto

package com.example.android.networkconnect;

public final class ConvoxLed {
  private ConvoxLed() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ConvoxLightPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.example.android.networkconnect.ConvoxLightPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
     */
    boolean hasColor();
    /**
     * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
     */
    com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color getColor();
    /**
     * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
     */
    com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder getColorOrBuilder();
  }
  /**
   * Protobuf type {@code com.example.android.networkconnect.ConvoxLightPacket}
   *
   * <pre>
   * Next Id: 2
   * </pre>
   */
  public static final class ConvoxLightPacket extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.example.android.networkconnect.ConvoxLightPacket)
      ConvoxLightPacketOrBuilder {
    // Use ConvoxLightPacket.newBuilder() to construct.
    private ConvoxLightPacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConvoxLightPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConvoxLightPacket defaultInstance;
    public static ConvoxLightPacket getDefaultInstance() {
      return defaultInstance;
    }

    public ConvoxLightPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConvoxLightPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.class, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Builder.class);
    }

    public static com.google.protobuf.Parser<ConvoxLightPacket> PARSER =
        new com.google.protobuf.AbstractParser<ConvoxLightPacket>() {
      public ConvoxLightPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConvoxLightPacket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConvoxLightPacket> getParserForType() {
      return PARSER;
    }

    public interface ColorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.example.android.networkconnect.ConvoxLightPacket.Color)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
       */
      boolean hasColorSpace();
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
       */
      com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace getColorSpace();

      /**
       * <code>repeated int32 coordinates = 2;</code>
       */
      java.util.List<java.lang.Integer> getCoordinatesList();
      /**
       * <code>repeated int32 coordinates = 2;</code>
       */
      int getCoordinatesCount();
      /**
       * <code>repeated int32 coordinates = 2;</code>
       */
      int getCoordinates(int index);
    }
    /**
     * Protobuf type {@code com.example.android.networkconnect.ConvoxLightPacket.Color}
     */
    public static final class Color extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.example.android.networkconnect.ConvoxLightPacket.Color)
        ColorOrBuilder {
      // Use Color.newBuilder() to construct.
      private Color(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Color(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Color defaultInstance;
      public static Color getDefaultInstance() {
        return defaultInstance;
      }

      public Color getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Color(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace value = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  colorSpace_ = value;
                }
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  coordinates_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                coordinates_.add(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  coordinates_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  coordinates_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            coordinates_ = java.util.Collections.unmodifiableList(coordinates_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.class, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder.class);
      }

      public static com.google.protobuf.Parser<Color> PARSER =
          new com.google.protobuf.AbstractParser<Color>() {
        public Color parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Color(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Color> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace}
       */
      public enum ColorSpace
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>RGB = 1;</code>
         */
        RGB(0, 1),
        /**
         * <code>HSV = 2;</code>
         */
        HSV(1, 2),
        ;

        /**
         * <code>RGB = 1;</code>
         */
        public static final int RGB_VALUE = 1;
        /**
         * <code>HSV = 2;</code>
         */
        public static final int HSV_VALUE = 2;


        public final int getNumber() { return value; }

        public static ColorSpace valueOf(int value) {
          switch (value) {
            case 1: return RGB;
            case 2: return HSV;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ColorSpace>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ColorSpace>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ColorSpace>() {
                public ColorSpace findValueByNumber(int number) {
                  return ColorSpace.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDescriptor().getEnumTypes().get(0);
        }

        private static final ColorSpace[] VALUES = values();

        public static ColorSpace valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private ColorSpace(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace)
      }

      private int bitField0_;
      public static final int COLOR_SPACE_FIELD_NUMBER = 1;
      private com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace colorSpace_;
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
       */
      public boolean hasColorSpace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
       */
      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace getColorSpace() {
        return colorSpace_;
      }

      public static final int COORDINATES_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> coordinates_;
      /**
       * <code>repeated int32 coordinates = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getCoordinatesList() {
        return coordinates_;
      }
      /**
       * <code>repeated int32 coordinates = 2;</code>
       */
      public int getCoordinatesCount() {
        return coordinates_.size();
      }
      /**
       * <code>repeated int32 coordinates = 2;</code>
       */
      public int getCoordinates(int index) {
        return coordinates_.get(index);
      }

      private void initFields() {
        colorSpace_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace.HSV;
        coordinates_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, colorSpace_.getNumber());
        }
        for (int i = 0; i < coordinates_.size(); i++) {
          output.writeInt32(2, coordinates_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, colorSpace_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < coordinates_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(coordinates_.get(i));
          }
          size += dataSize;
          size += 1 * getCoordinatesList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.example.android.networkconnect.ConvoxLightPacket.Color}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.example.android.networkconnect.ConvoxLightPacket.Color)
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.class, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder.class);
        }

        // Construct using com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          colorSpace_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace.HSV;
          bitField0_ = (bitField0_ & ~0x00000001);
          coordinates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_descriptor;
        }

        public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color getDefaultInstanceForType() {
          return com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance();
        }

        public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color build() {
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color buildPartial() {
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color result = new com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.colorSpace_ = colorSpace_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            coordinates_ = java.util.Collections.unmodifiableList(coordinates_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.coordinates_ = coordinates_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color) {
            return mergeFrom((com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color other) {
          if (other == com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance()) return this;
          if (other.hasColorSpace()) {
            setColorSpace(other.getColorSpace());
          }
          if (!other.coordinates_.isEmpty()) {
            if (coordinates_.isEmpty()) {
              coordinates_ = other.coordinates_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCoordinatesIsMutable();
              coordinates_.addAll(other.coordinates_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace colorSpace_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace.HSV;
        /**
         * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
         */
        public boolean hasColorSpace() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
         */
        public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace getColorSpace() {
          return colorSpace_;
        }
        /**
         * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
         */
        public Builder setColorSpace(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          colorSpace_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color.ColorSpace color_space = 1 [default = HSV];</code>
         */
        public Builder clearColorSpace() {
          bitField0_ = (bitField0_ & ~0x00000001);
          colorSpace_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.ColorSpace.HSV;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> coordinates_ = java.util.Collections.emptyList();
        private void ensureCoordinatesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            coordinates_ = new java.util.ArrayList<java.lang.Integer>(coordinates_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getCoordinatesList() {
          return java.util.Collections.unmodifiableList(coordinates_);
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public int getCoordinatesCount() {
          return coordinates_.size();
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public int getCoordinates(int index) {
          return coordinates_.get(index);
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public Builder setCoordinates(
            int index, int value) {
          ensureCoordinatesIsMutable();
          coordinates_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public Builder addCoordinates(int value) {
          ensureCoordinatesIsMutable();
          coordinates_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public Builder addAllCoordinates(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCoordinatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, coordinates_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 coordinates = 2;</code>
         */
        public Builder clearCoordinates() {
          coordinates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.example.android.networkconnect.ConvoxLightPacket.Color)
      }

      static {
        defaultInstance = new Color(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.example.android.networkconnect.ConvoxLightPacket.Color)
    }

    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color color_;
    /**
     * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
     */
    public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color getColor() {
      return color_;
    }
    /**
     * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
     */
    public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder getColorOrBuilder() {
      return color_;
    }

    private void initFields() {
      color_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, color_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, color_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.example.android.networkconnect.ConvoxLightPacket}
     *
     * <pre>
     * Next Id: 2
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.example.android.networkconnect.ConvoxLightPacket)
        com.example.android.networkconnect.ConvoxLed.ConvoxLightPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.class, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Builder.class);
      }

      // Construct using com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (colorBuilder_ == null) {
          color_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.example.android.networkconnect.ConvoxLed.internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor;
      }

      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket getDefaultInstanceForType() {
        return com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.getDefaultInstance();
      }

      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket build() {
        com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket buildPartial() {
        com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket result = new com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket) {
          return mergeFrom((com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket other) {
        if (other == com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.getDefaultInstance()) return this;
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color color_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder> colorBuilder_;
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color getColor() {
        if (colorBuilder_ == null) {
          return color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public Builder setColor(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public Builder setColor(
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public Builder mergeColor(com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color value) {
        if (colorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              color_ != com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance()) {
            color_ =
              com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.getDefaultInstance();
          onChanged();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder getColorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      public com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_;
        }
      }
      /**
       * <code>optional .com.example.android.networkconnect.ConvoxLightPacket.Color color = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.Color.Builder, com.example.android.networkconnect.ConvoxLed.ConvoxLightPacket.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.example.android.networkconnect.ConvoxLightPacket)
    }

    static {
      defaultInstance = new ConvoxLightPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.example.android.networkconnect.ConvoxLightPacket)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_example_android_networkconnect_ConvoxLightPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3com/example/android/networkconnect/con" +
      "vox_led.proto\022\"com.example.android.netwo" +
      "rkconnect\"\200\002\n\021ConvoxLightPacket\022J\n\005color" +
      "\030\001 \001(\0132;.com.example.android.networkconn" +
      "ect.ConvoxLightPacket.Color\032\236\001\n\005Color\022`\n" +
      "\013color_space\030\001 \001(\0162F.com.example.android" +
      ".networkconnect.ConvoxLightPacket.Color." +
      "ColorSpace:\003HSV\022\023\n\013coordinates\030\002 \003(\005\"\036\n\n" +
      "ColorSpace\022\007\n\003RGB\020\001\022\007\n\003HSV\020\002B/\n\"com.exam" +
      "ple.android.networkconnectB\tConvoxLed"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_example_android_networkconnect_ConvoxLightPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor,
        new java.lang.String[] { "Color", });
    internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_descriptor =
      internal_static_com_example_android_networkconnect_ConvoxLightPacket_descriptor.getNestedTypes().get(0);
    internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_example_android_networkconnect_ConvoxLightPacket_Color_descriptor,
        new java.lang.String[] { "ColorSpace", "Coordinates", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
